{"version":3,"sources":["../src/index.ts","../src/sdk.ts"],"sourcesContent":["export * from \"./sdk\";\nexport * from \"./types\";\n","import { faker } from \"@faker-js/faker\";\nimport type { Flag, Environment, Rule } from \"./types\";\n\nimport { NextMiddleware, NextRequest, NextResponse } from \"next/server\";\nimport * as nanoid from \"nanoid\";\n\ntype Identify = (req: NextRequest) => string | Promise<string>;\n\nexport type Config = {\n\tidentify?: Identify;\n};\n\nexport class EdgeFlags {\n\tprivate readonly identify?: Identify;\n\tpublic config: ConfigAPI;\n\n\tconstructor(opts?: Config) {\n\t\tthis.identify = opts?.identify;\n\t\tthis.config = new ConfigAPI();\n\t}\n\n\t/**\n\t * handler should be default exported by the user in an edge compatible api route\n\t */\n\tpublic handler(): NextMiddleware {\n\t\treturn (_req: NextRequest) => {\n\t\t\treturn NextResponse.next();\n\t\t};\n\t}\n}\n\nclass ConfigAPI {\n\tprivate _dummy: Flag[] = [];\n\tprivate readonly newId = (prefix: string) =>\n\t\t[\n\t\t\tprefix,\n\t\t\tnanoid.customAlphabet(\n\t\t\t\t\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\",\n\t\t\t)(16),\n\t\t].join(\"_\");\n\n\tpublic async listFlags(): Promise<Flag[]> {\n\t\treturn this._dummy;\n\t}\n\n\t/**\n\t * Create a new flag for each environment\n\t * The created flags will be disabled and have no rules.\n\t */\n\tpublic async createFlag(create: { name: string }): Promise<\n\t\tRecord<Flag[\"environment\"], Flag>\n\t> {\n\t\tconst id = this.newId(\"flag\");\n\t\tconst _create = (environment: Environment): Flag => ({\n\t\t\tenabled: false,\n\t\t\tid,\n\t\t\tname: create.name,\n\t\t\trules: [],\n\t\t\tenvironment,\n\t\t\tpercentage: null,\n\t\t});\n\n\t\tconst flags = {\n\t\t\tproduction: _create(\"production\"),\n\t\t\tpreview: _create(\"preview\"),\n\t\t\tdevelopment: _create(\"development\"),\n\t\t};\n\t\tthis._dummy.push(...Object.values(flags));\n\n\t\treturn new Promise((r) => r(flags));\n\t}\n\n\tpublic async updateFlag(\n\t\tflagId: string,\n\t\tenvironment: Environment,\n\t\tdata: {\n\t\t\tname?: string;\n\t\t\tenabled?: boolean;\n\t\t\trules?: Rule[];\n\t\t\tpercentage?: number | null;\n\t\t},\n\t): Promise<Flag> {\n\t\tconst idx = this._dummy.findIndex(\n\t\t\t(f) => f.id === flagId && f.environment === environment,\n\t\t);\n\t\tif (idx < 0) {\n\t\t\tthrow new Error(\"Flag not found\");\n\t\t}\n\t\tconst flag = this._dummy[idx];\n\n\t\tconst update = {\n\t\t\t...flag,\n\t\t\tname: data?.name ?? flag.name,\n\t\t\tenabled: data?.enabled ?? flag.enabled,\n\t\t\trules: data?.rules ?? flag.rules,\n\t\t\tperformance: data?.percentage ?? flag.percentage,\n\t\t};\n\t\tthis._dummy[idx] = update;\n\t\treturn update;\n\t}\n\n\tpublic async copyFlag(flagId: string, from: Environment, to: Environment) {\n\t\tconst source = this._dummy.find(\n\t\t\t(f) => f.id === flagId && f.environment === from,\n\t\t);\n\t\tif (!source) {\n\t\t\tthrow new Error(\"Source flag not found\");\n\t\t}\n\n\t\tconst idx = this._dummy.findIndex(\n\t\t\t(f) => f.id === flagId && f.environment === to,\n\t\t);\n\t\tif (idx < 0) {\n\t\t\tthrow new Error(\"Destination flag not found\");\n\t\t}\n\t\tthis._dummy[idx] = { ...source, environment: to };\n\t}\n\n\t/**\n\t * DEV ONLY\n\t *\n\t * Seed some flags - THIS OVERRIDES THE EXISTING FLAGS\n\t *\n\t *\n\t */\n\tpublic initDummy(): void {\n\t\tconst envs: Environment[] = [\"production\", \"preview\", \"development\"];\n\t\tthis._dummy = new Array(3).fill(null).flatMap((_) => {\n\t\t\tconst flagId = this.newId(\"flag\");\n\n\t\t\tconst name = faker.color.human();\n\t\t\treturn envs.map((environment: Environment) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: flagId,\n\t\t\t\t\tname,\n\t\t\t\t\tenabled: Math.random() > 0.3,\n\t\t\t\t\trules: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"ip\",\n\t\t\t\t\t\t\tcompare: \"in\",\n\t\t\t\t\t\t\ttarget: new Array(Math.ceil(5 * Math.random()))\n\t\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t\t.map((_) => faker.internet.ip()),\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"not_in\",\n\t\t\t\t\t\t\ttarget: new Array(Math.ceil(5 * Math.random()))\n\t\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t\t.map((_) => faker.random.alpha(4)),\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"city\",\n\t\t\t\t\t\t\tcompare: \"contains\",\n\t\t\t\t\t\t\ttarget: \"_some_suffix\",\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"city\",\n\t\t\t\t\t\t\tcompare: \"not_contains\",\n\t\t\t\t\t\t\ttarget: \"_some_suffix\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"city\",\n\t\t\t\t\t\t\tcompare: \"eq\",\n\t\t\t\t\t\t\ttarget: faker.address.cityName(),\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"city\",\n\t\t\t\t\t\t\tcompare: \"not_eq\",\n\t\t\t\t\t\t\ttarget: faker.address.cityName(),\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"empty\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"not_empty\",\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"gt\",\n\t\t\t\t\t\t\ttarget: \"100\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"gte\",\n\t\t\t\t\t\t\ttarget: \"200\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"lt\",\n\t\t\t\t\t\t\ttarget: \"100\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this.newId(\"rule\"),\n\t\t\t\t\t\t\tversion: \"v1\",\n\t\t\t\t\t\t\taccessor: \"identifier\",\n\t\t\t\t\t\t\tcompare: \"lte\",\n\t\t\t\t\t\t\ttarget: \"200\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tvalue: true,\n\t\t\t\t\tenvironment,\n\t\t\t\t\tpercentage:\n\t\t\t\t\t\tMath.random() > 0.5 ? Math.ceil(100 * Math.random()) : null,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n}\n"],"mappings":"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","names":["_"]}